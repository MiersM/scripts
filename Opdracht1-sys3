#!/bin/bash
# Maarten Miers --- TI2 groep2
# System Engineering 3 --- Opdracht 1

USERS="newusers.txt"
ADDUSER=true # sets the ADDUSER-flag on true

function helpFct() {
	clear
	echo "This script adds and deletes users from a given textfile."
	echo ""
	echo "Run this script as ROOT!"
	echo ""
	echo "OPTIONS"
	echo "	-h, ---help"
	echo "	Shows the help function"
	echo ""
	echo "	-a, --adduser"
	echo "	Using this parameter will add the users from the  'newusers.txt' file."
	echo ""
	echo "	-d, --deluser"
	echo "	This deletes the users given from the 'newusers.txt' file."
}

# function to add users
function addUserFct() {
	echo "Adding user: $username"

	useradd $username; echo "$username:$pass" | chpasswd
}

# function to delete users
function deleteUserFct() {
	echo "Deleting user: $username"

	`userdel $username`
}

# This while loop splits each new line into a segment, then
# the users and passwords are separated.
function separateFileFct() {
	# while splitting on newlines, read "userline"
	while SEPARATOR="\n" read userline;
	do
		# on each line, split before and after " "
		username="${userline/" "*/}"
		pass="${userline/*" "/}"

		if [ $ADDUSER = true ]
		then
			addUserFct	
		else
			deleteUserFct
		fi

	done < <(grep '' $USERS) # read the content of the textfile
	# grep is used here to avoid the last user from being skipped.
	# source: http://stackoverflow.com/questions/16627578/bash-iterating-through-txt-file-lines-cant-read-last-line	
	
}

# loops and checks if parameter is present
if [ -z "$1" ]
then
	echo "Wrong parameter! Please use the help function '$0 -h'"
	exit 1
else
	until [ -z $1 ]
	do
		case $1 in
			-h | --help	)
				helpFct
				;;
			
			-a | --adduser	)
				ADDUSER=true
				separateFileFct 
				;;
			
			-d | --deluser	)
				ADDUSER=false
				separateFileFct
				;;
			
			*		)
				helpFct
				;;
		esac
	    shift
	done
fi

